{"version":3,"file":"onfidoAuth.activeVideo.css","mappings":";AAEA,2DACE,gBACA,WACA,YACA,6CACA,sDACA,6GACA,6FACA,uEAGF,gDACE,sDACA,6GACA,aACA,UACA,SACA,WACA,oDAEA,oGACE,gBACA,sDACA,qFACA,uEACA,6DACA,gBAEA,wGACE,eAGF,oJCwEF,oBACA,eACA,gBACA,mBACA,oBD1EI,+CACA,kBACA,iBACA","sources":["webpack://OnfidoAuth/./components/ActiveVideo/FaceNotDetected/style.module.scss","webpack://OnfidoAuth/../node_modules/@onfido/castor/src/helpers/font/font.scss"],"sourcesContent":["@use '@onfido/castor';\n\n.faceNotDetected {\n  background: #fff;\n  width: 100%;\n  height: 100%;\n  border-radius: var(--ods-border-radius-large);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.list {\n  display: flex;\n  flex-direction: column;\n  row-gap: castor.space(3);\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  box-sizing: border-box;\n\n  .listItem {\n    list-style: none;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    column-gap: castor.space(1.5);\n    text-align: left;\n\n    svg {\n      min-width: 32px;\n    }\n\n    .text {\n      @include castor.font('300-regular');\n      color: castor.color('content-secondary');\n      font-style: normal;\n      line-height: 24px;\n      font-family: var(--osdk-font-family-body);\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n\n$_allowed-combinations: (\n  '800-bold',\n  '700-bold',\n  '600-bold',\n  '500-bold',\n  '400-bold',\n  '300-bold',\n  '200-bold',\n  '100-bold',\n  '800-regular',\n  '700-regular',\n  '600-regular',\n  '500-regular',\n  '400-regular',\n  '300-regular',\n  '200-regular',\n  '100-regular',\n  '800-light',\n  '700-light',\n  '600-light',\n  '500-light',\n  '400-allcaps',\n  '300-allcaps',\n  '200-allcaps',\n  '100-allcaps',\n  '400-mono',\n  '300-mono',\n  '200-mono'\n);\n\n$_sizes: (\n  '800': (\n    font-size: 3.375rem,\n    line-height: 4rem,\n  ),\n  '700': (\n    font-size: 2.875rem,\n    line-height: 3.5rem,\n  ),\n  '600': (\n    font-size: 1.875rem,\n    line-height: 2.5rem,\n  ),\n  '500': (\n    font-size: 1.5rem,\n    line-height: 2rem,\n  ),\n  '400': (\n    font-size: 1.25rem,\n    line-height: 1.5rem,\n  ),\n  '300': (\n    font-size: 1rem,\n    line-height: 1.5rem,\n  ),\n  '200': (\n    font-size: 0.875rem,\n    line-height: 1.5rem,\n  ),\n  '100': (\n    font-size: 0.75rem,\n    line-height: 1rem,\n  ),\n);\n\n$_types: (\n  'bold': (\n    font-weight: 500,\n  ),\n  'regular': (\n    font-weight: 400,\n  ),\n  'light': (\n    font-weight: 300,\n  ),\n  'allcaps': (\n    text-transform: uppercase,\n  ),\n  'mono': (\n    font-family: string.unquote('\"Roboto Mono\", Consolas, Menlo, monospace'),\n  ),\n);\n\n@mixin font($name) {\n  @if not list.index($_allowed-combinations, $name) {\n    @error 'Font token not supported: #{$name}';\n  }\n\n  $styles: ();\n\n  @if $name {\n    $separator-index: string.index($name, '-');\n\n    $size-key: string.slice($name, 1, $separator-index - 1);\n    $size-styles: map.get($_sizes, $size-key);\n    $styles: map.merge($styles, $size-styles);\n\n    $type-key: string.slice($name, $separator-index + 1);\n    $type-styles: map.get($_types, $type-key);\n    $styles: map.merge($styles, $type-styles);\n  }\n\n  font-family: _get-or-default($styles, font-family, inherit);\n  font-size: _get-or-default($styles, font-size, initial);\n  font-weight: _get-or-default($styles, font-weight, initial);\n  line-height: _get-or-default($styles, line-height, initial);\n  text-transform: _get-or-default($styles, text-transform, none);\n}\n\n@function _get-or-default($map, $key, $default) {\n  @if map.has-key($map, $key) {\n    @return map.get($map, $key);\n  }\n\n  @return $default;\n}\n"],"names":[],"sourceRoot":""}